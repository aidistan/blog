# encoding: UTF-8

task :default => :serve

# serve
desc "Start the server by full compilation"
task :serve do
  system("jekyll serve --config _config_d.yml -w")
end

# serve with drafts
desc "Start the server with drafts"
task :serve_with_drafts do
  system("jekyll serve --config _config_d.yml -w -D")
end

require "stringex"

# create new post
desc "Create a new post in _posts"
task :new_post, :title do |t, args|
  if args.title
    title = args.title
  else
    title = get_stdin("Enter a title for your post: ")
  end
  filename = "_posts/#{Time.now.strftime('%Y-%m-%d')}-#{title.to_url}.md"
  if File.exist?(filename)
    abort("rake aborted!") unless ask("#{filename} already exists. Do you want to overwrite?", ['y', 'N']) == 'y'
  end
  puts "Creating new post: #{filename}"
  rtn = <<-END_OF_DOC
---
layout: post
title: \"#{title.gsub(/&/,'&amp;')}\"
modified: #{Time.now.strftime('%Y-%m-%d %H:%M:%S %z')}
tags: []
image:
  feature: 
  credit: 
  creditlink: 
comments: post-#{Time.now.strftime('%Y%m%d')}-0
share: true
link: 
---
  END_OF_DOC
  File.open(filename, 'w').puts rtn
end

# usage rake new_page
desc "Create a new page"
task :new_page, :title do |t, args|
  if args.title
    title = args.title
  else
    title = get_stdin("Enter a title for your page: ")
  end
  filename = "#{title.to_url}.md"
  if File.exist?(filename)
    abort("rake aborted!") unless ask("#{filename} already exists. Do you want to overwrite?", ['y', 'N']) == 'y'
  end
  puts "Creating new page: #{filename}"
  rtn = <<-END_OF_DOC
---
layout: page
permalink: /#{title.to_url}/
title: \"#{title}\"
modified: #{Time.now.strftime('%Y-%m-%d %H:%M')}
tags: []
image:
  feature: 
  credit: 
  creditlink: 
comments: 
share: false
---
  END_OF_DOC
  File.open(filename, 'w').puts rtn
end

def get_stdin(message)
  print message
  STDIN.gets.chomp
end

def ask(message, valid_options)
  if valid_options
    answer = get_stdin("#{message} #{valid_options.to_s.gsub(/"/, '').gsub(/, /,'/')} ") while !valid_options.include?(answer)
  else
    answer = get_stdin(message)
  end
  answer
end
